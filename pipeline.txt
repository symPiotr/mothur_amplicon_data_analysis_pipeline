#######################################
############## OUR DATA ###############

>>> 230ish amplicon libraries, for different genes (insect mitochondrial - COI, 16S rRNA; bacterial - 16S rRNA, different regions), for different insects or groups of insects. Different amplicon types within library.
>>> Libraries prepared using custom two-step PCR (first round - template-specific PCR; second round - indexing), following a modified Meyer & Kircher 2010 protocol.
>>> Pooled libraries sequenced on a shared MiSeq v3 lane (2x300bp reads) at the Institute of Environmental Sciences
>>> Data available on the IES cluster: /mnt/matrix/symbio/raw_data/20191109_MiSeq_first_run/


#######################################
####### THE PIPELINE - SUMMARY ########

For selected samples, we:
	Copy reads to a working directory
	Trim reads (trim_galore)
	Assemble reads into contigs
	Quality-screen reads
	Select unique sequences and compute count table
	Discard rare unique seqs
	Align reads to a reference, discard those that didn't align
	[16S] Screen for chimeras
	[16S] Assign taxonomy
	Compute distance matrix, pick OTUs
	Prepare OTU tables

Example data that I am starting with: three libraries for Macrosteles laevis leafhopper individuals, prepped by Sandra and Monika. They attempted to amplify three genes:
	Insect mitochondrial COI (primers BF3 & BR2)
	Insect mitochondrial 16S rRNA (primers Chiar16SF and Chiar16SR, Marquina et al. 2018)
	Bacterial 16S rRNA (primers 515F and 806R)
... but mito16S didn't amplify because of a critical mismatch in one of the primers. Then, these libraries contain the mixture of two products.


#######################################
############## Preparations ###########

############################
### Create working directory on the cluster, go there!
cd 
mkdir amplicon_analyses
cd amplicon_analyses
mkdir 20191112_test
cd 20191112_test

############################
### Mothur can work with gzip-compressed files, but the last time I had some issues.
### Hence, it might be easier to copy them to your work-dir and uncompress.
### You may or may not want to rename them.

mkdir raw_reads
cd raw_reads

cp /home/piotr.lukasik/symbio/raw_data/20191109_MiSeq_first_run/S-BTW1_S213_L001_R1_001.fastq.gz ./S-BTW1_R1.fastq.gz
cp /home/piotr.lukasik/symbio/raw_data/20191109_MiSeq_first_run/S-BTW1_S213_L001_R2_001.fastq.gz ./S-BTW1_R2.fastq.gz
cp /home/piotr.lukasik/symbio/raw_data/20191109_MiSeq_first_run/S-BTW2_S210_L001_R1_001.fastq.gz ./S-BTW2_R1.fastq.gz
cp /home/piotr.lukasik/symbio/raw_data/20191109_MiSeq_first_run/S-BTW2_S210_L001_R2_001.fastq.gz ./S-BTW2_R2.fastq.gz
cp /home/piotr.lukasik/symbio/raw_data/20191109_MiSeq_first_run/S-BTW3_S207_L001_R1_001.fastq.gz ./S-BTW3_R1.fastq.gz
cp /home/piotr.lukasik/symbio/raw_data/20191109_MiSeq_first_run/S-BTW3_S207_L001_R2_001.fastq.gz ./S-BTW3_R2.fastq.gz

gunzip *
cd ..

############################
### Check cluster usage
htop

### Start screen --- an interactive session which assures that a broken network connection won't waste your analyses
screen -S mothur_session

############################
### Start mothur!
mothur


#######################################
############## Running mothur #########


######## Set working directory
set.dir(input=~/amplicon_analyses/20191112_test, output=~/amplicon_analyses/20191112_test)


######## Assemble forward and reverse reads into contigs
### Create sample list
make.file(inputdir=~/amplicon_analyses/20191112_test/raw_reads, type=fastq, prefix=ML)
set.dir(input=~/amplicon_analyses/20191112_test, output=~/amplicon_analyses/20191112_test)

system(cat ~/amplicon_analyses/20191112_test/ML.files)

### Make contigs
make.contigs(file=ML.files)

	# Output File Names: 
	# /home/piotr.lukasik/amplicon_analyses/20191112_test/ML.trim.contigs.fasta
	# /home/piotr.lukasik/amplicon_analyses/20191112_test/ML.scrap.contigs.fasta
	# /home/piotr.lukasik/amplicon_analyses/20191112_test/ML.contigs.report
	# /home/piotr.lukasik/amplicon_analyses/20191112_test/ML.contigs.groups
	#
	# let's look at them!


######## Read quality control ...
# (Ctrl+A+D --> leave the mothur screen)
head -40 raw_reads/S-BTW1_R1.fastq
head -40 raw_reads/S-BTW1_R2.fastq
head -20 ML.trim.contigs.fasta

# Open them in CodonCode Aligner ... not great.

###
cd raw_reads

#ls *fastq | xargs trim_galore --dont_gzip --hardtrim5 250 
trim_galore --dont_gzip --hardtrim5 250 *fastq

# edit ML.files

# get back to mothur

make.contigs(file=ML.files)


summary.seqs(fasta=current)


######## Quality-trimming sequences
trim.seqs(fasta=ML.trim.contigs.fasta, group=ML.contigs.groups, oligos=primers_to_trim.oligos, minlength=250, maxlength=500, maxambig=0, maxhomop=10, pdiffs=2)

""" primers_to_trim.oligos
#COI - BF3, BR2
forward CCHGAYATRGCHTTYCCHCG
reverse TCDGGRTGNCCRAARAAYCA

#16S-mito - Chiar16SF, Chiar16SR
forward ARTYCAACATCGRGGTC
reverse CYGTRCDAAGGTAGCAWA

#16Sbact - 515F, 806R
forward GTGYCAGCMGCCGCGGTAA
reverse GGACTACNVGGGTWTCTAAT
"""

######## Extracting quality-trimmed sequences
# list.seqs(fasta=ML.trim.contigs.trim.fasta)
# get.seqs(accnos=ML.trim.contigs.trim.accnos, group=ML.contigs.groups)
list.seqs(fasta=current)
get.seqs(accnos=current, group=current)

######## Get basic info about sequences!
summary.seqs(fasta=current)
count.groups(fasta=current)

####### Selecting specific libraries for analysis from larger datasets ?
# get.groups(group=ML.contigs.pick.groups, fasta=ML.trim.contigs.trim.fasta, groups=PL301-PL302-TETLON-...)

####### Merging files?
# merge.files(input=samples_first_run.trim.contigs.trim.fasta-samples_2nd_run.trim.contigs.trim.fasta, output=populations.fasta)
# merge.files(input=samples_first_run.contigs.pick.groups-samples_2nd_run.trim.contigs.trim.groups, output=populations.groups)



####### Pick unique sequences
unique.seqs(fasta=current)

####### Generate count_table = a unique sequence table
count.seqs(name=current, group=current)

summary.seqs(fasta=ML.trim.contigs.trim.unique.fasta)
summary.seqs(fasta=ML.trim.contigs.trim.unique.fasta, count=ML.trim.contigs.trim.count_table)



####### Discard unique genotypes present only once in the dataset (singletons)
split.abund(fasta=ML.trim.contigs.trim.unique.fasta, count=ML.trim.contigs.trim.count_table, cutoff=1)

summary.seqs(fasta=current, count=current)



######## Align sequences against a MLAE mitogenome!
#####
align.seqs(fasta=ML.trim.contigs.trim.unique.abund.fasta, reference=references/mito_MLAE.fasta, processors=16)
   # COI expected: 2578-2995?
   # 16S expected: 13487-13825

######## See how they aligned, removing unaligned
summary.seqs(fasta=ML.trim.contigs.trim.unique.abund.align)
screen.seqs(fasta=ML.trim.contigs.trim.unique.abund.align, count=ML.trim.contigs.trim.abund.count_table, start=2578, end=2995, minlength=400)

summary.seqs(fasta=current, count=current)
count.groups(count=current)

filter.seqs(fasta=current, vertical=T, trump=.)

######## Simplify file names
system(mv ./ML.trim.contigs.trim.abund.good.count_table ML_COI.count_table)
system(mv ./ML.trim.contigs.trim.unique.abund.good.filter.fasta ML_COI.fasta)

######## Compute distance matrix, cluster, construct summary tables
dist.seqs(fasta=ML_COI.fasta, processors=16, cutoff=0.05)
cluster(column=current, count=ML_COI.count_table, cutoff=0.03, method=average)
bin.seqs(list=current, fasta=current, label=0.01)
make.shared(list=current,count=current,label=0.01)






######## Align 16S sequences against a SILVA db
align.seqs(fasta=ML.trim.contigs.trim.unique.abund.fasta, reference=/mnt/matrix/symbio/db/silva.seed_v132.align, processors=24)


summary.seqs(fasta=ML.trim.contigs.trim.unique.abund.align)
screen.seqs(fasta=ML.trim.contigs.trim.unique.abund.align, count=ML.trim.contigs.trim.abund.count_table, start=13862, end=23444, minlength=220)

filter.seqs(fasta=current, vertical=T, trump=.)

unique.seqs(fasta=ML.trim.contigs.trim.unique.abund.good.filter.fasta, count=ML.trim.contigs.trim.abund.good.count_table)
    # ML.trim.contigs.trim.unique.abund.good.filter.count_table
    # ML.trim.contigs.trim.unique.abund.good.filter.unique.fasta


######## Identify and remove chimaeric sequences using UChime
chimera.uchime(fasta=ML.trim.contigs.trim.unique.abund.good.filter.unique.fasta, reference=self, count=ML.trim.contigs.trim.unique.abund.good.filter.count_table, dereplicate=f, mindiv=0.35, processors=24, minh=0.5, xn=3)
remove.seqs(accnos=current, fasta=current, count=current)


######## Classify
classify.seqs(fasta=current, count=current, reference=/mnt/matrix/symbio/db/silva.seed_v132.align, taxonomy=/mnt/matrix/symbio/db/silva.seed_v132.tax, cutoff=80)

remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)

summary.tax(taxonomy=current, count=current)


######## Simplify file names
system(mv ML.trim.contigs.trim.unique.abund.good.filter.unique.pick.pick.fasta ML_16S.fasta)
system(mv ML.trim.contigs.trim.unique.abund.good.filter.pick.pick.count_table ML_16S.count_table)
system(mv ML.trim.contigs.trim.unique.abund.good.filter.unique.pick.seed_v132.wang.pick.taxonomy ML_16S.taxonomy)

######## Compute distance matrix, cluster, construct summary tables
dist.seqs(fasta=ML_16S.fasta, processors=24, cutoff=0.05)
cluster(column=current, count=ML_16S.count_table, cutoff=0.03, method=average)
bin.seqs(list=current, fasta=current, label=0.01)
make.shared(list=current,count=current,label=0.01)






